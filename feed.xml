<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Botbreeder</title>
    <link href="https://botbreeder.github.io/feed.xml" rel="self" />
    <link href="https://botbreeder.github.io" />
    <updated>2024-03-11T00:51:07+01:00</updated>
    <author>
        <name>Julien Laguerre</name>
    </author>
    <id>https://botbreeder.github.io</id>

    <entry>
        <title>Hup</title>
        <author>
            <name>Julien Laguerre</name>
        </author>
        <link href="https://botbreeder.github.io/hup.html"/>
        <id>https://botbreeder.github.io/hup.html</id>

        <updated>2024-03-11T00:51:07+01:00</updated>
            <summary>
                <![CDATA[
                    This is a stack. 1 2 3 And this is how you add 1 to each item of this stack. 1 2 3 + 1 The result of this expression is another stack. 2 3 4 There is no operator precedence. Instead, an expression is&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>This is a stack.</p>
<pre><code>1 2 3</code></pre>
<p>And this is how you add 1 to each item of this stack.</p>
<pre><code>1 2 3 + 1</code></pre>
<p>The result of this expression is another stack.</p>
<pre><code>2 3 4</code></pre>
<p>There is no operator precedence. Instead, an expression is read from left to right. Values are pushed on an operand stack. Operators are applied to the operand stack, resulting in a new stack.</p>
<pre><code>1 2 3 + 1 * 2</code></pre>
<p>Here, 1 is first added to each item of the <code>1 2 3</code> stack, and then each item of the resulting stack <code>2 3 4</code> is doubled, which results in:</p>
<pre><code>4 6 8</code></pre>
<p>Now this is a function call. The name of the function is "a", and it has 2 arguments "b" and "c".</p>
<pre><code>a(b c)</code></pre>
<p>When an expression is given as argument to a function, the expression is first resolved before the function gets called on the resulting stack.</p>
<pre><code>f(1 2 3 + 1 * 2)</code></pre>
<p>This is equivalent to:</p>
<pre><code>f(4 6 8)</code></pre>
<p>Now, this is a table.</p>
<pre><code>[ ]</code></pre>
<p>A table may have a name, a formula, and values obtained by executing the formula, always in that order. The formula is preceded by <code>=</code> and each value is preceded by <code>|</code>.</p>
<pre><code>[ example = 1 2 3 + 1 * 2 | 4 | 6 | 8 ]</code></pre>
<p>White space is irrelevant.</p>
<pre><code>[<br>    example<br>    = 1 2 3 + 1 * 2<br>    | 4<br>    | 6<br>    | 8<br>]</code></pre>
<p> </p>
<p><code></code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cmdline &amp; toolbar</title>
        <author>
            <name>Julien Laguerre</name>
        </author>
        <link href="https://botbreeder.github.io/cmdline-and-toolbar.html"/>
        <id>https://botbreeder.github.io/cmdline-and-toolbar.html</id>

        <updated>2024-02-19T10:00:44+01:00</updated>
            <summary>
                <![CDATA[
                    I'm ditching the outliner idea, as on second thought it is unclear how the interface would need to be manipulated. Instead, I'll rely on views, which are selections of workspaces that the user wants to see simultaneously. I've added a small command line at the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I'm ditching the outliner idea, as on second thought it is unclear how the interface would need to be manipulated. Instead, I'll rely on views, which are selections of workspaces that the user wants to see simultaneously.</p>
<p>I've added a small command line at the bottom of the screen for power users (e.g., me). Everything should be doable from UI elements alone, and from the command line alone. It should also be possible to create custom commands. Hitting the spacebar gives you instant focus on the command line, and you're ready to type in.</p>
<p>Finally, there's now a toolbar at the top of the screen. It's meant to provide quick access to different toolboxes in the left-hand side panel. I thought it would be handy to always have it on screen.</p>
<p>For both the command line and the toolbar, I used the excellent css library <a href="http://augmented-ui.com/" target="_blank" rel="noopener noreferrer">augmented-ui</a> to get those nice diagonal shapes. All in all, the entire thing doesn't look as futuristic as I was planning, but it's still easy on the eye so, I'm satisfied.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Interface</title>
        <author>
            <name>Julien Laguerre</name>
        </author>
        <link href="https://botbreeder.github.io/interface.html"/>
        <id>https://botbreeder.github.io/interface.html</id>

        <updated>2024-02-15T16:58:18+01:00</updated>
            <summary>
                <![CDATA[
                    Starting from the end, I wanted to try a certain type of UI, very minimalistic, before I jump into the core concepts of Semantify3D. I've been experimenting for 2 weeks, and now have a UI draft that looks how I want it to. When I&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Starting from the end, I wanted to try a certain type of UI, very minimalistic, before I jump into the core concepts of Semantify3D. I've been experimenting for 2 weeks, and now have a UI draft that looks how I want it to.</p>
<p>When I work with complex softwares, I always struggle with the UI to find what I need, because the controls are scattered all around the central area, and often hidden behind menus or dropdowns. Here, I decided to put every control in a panel on the left-hand side of the screen, because I find it easier to merely scroll until I get what I'm looking for.</p>
<p>Then the main area is occupied by workspaces, ready to receive code editors, graphs or 3D visualizers, editable markdown viewers, ...etc. There again, the user just have to scroll in order to reach them.</p>
<p>My idea is that of a Jupyter style notebook, but in the shape of an outliner. An outliner is basically a recursively folding container, and I don't have that implemented yet. It might be my next move.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Here we go</title>
        <author>
            <name>Julien Laguerre</name>
        </author>
        <link href="https://botbreeder.github.io/here-we-go.html"/>
        <id>https://botbreeder.github.io/here-we-go.html</id>

        <updated>2024-02-11T17:04:07+01:00</updated>
            <summary>
                <![CDATA[
                    Everything has to start somewhere.
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Everything has to start somewhere.</p>
            ]]>
        </content>
    </entry>
</feed>
